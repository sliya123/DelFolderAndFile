#ifndef DSTRING_H__
#define DSTRING_H__

#include <stddef.h>  // size_t
#include <stdint.h>  // uint64_t


/* ------------------------------------------------------------
   new dynamic string
   功能：创建动态字符串
   参数：要预留的缓冲区大小
   返回：动态字符串变量（即：缓冲区中数据的地址）
------------------------------------------------------------ */
char * new_ds(size_t size);


/* ------------------------------------------------------------
   free dynamic string
   功能：释放动态字符串，并将 *ps 设置为 NULL
   参数：动态字符串变量的地址
   返回：无
------------------------------------------------------------ */
void free_ds(char **ps);


/* ------------------------------------------------------------
   is dynamic string
   功能：判断字符串是否为动态字符串
   参数：字符串变量
   返回：是返回 1，不是返回 0
------------------------------------------------------------ */
int is_ds(const char *s);


/* ------------------------------------------------------------
   dynamic string custom data
   功能：获取动态字符串的自定义数据
   参数：动态字符串变量
   返回：自定义数据
------------------------------------------------------------ */
uint64_t ds_custom(const char *s);


/* ------------------------------------------------------------
   dynamic string custom data
   功能：设置动态字符串的自定义数据
   参数：动态字符串变量，定义数据
   返回：无
------------------------------------------------------------ */
void ds_set_custom(char *s, uint64_t custom);


/* ------------------------------------------------------------
   dynamic string length
   功能：获取动态字符串的长度
   参数：动态字符串变量
   返回：字符串长度（不包括尾部的 '\0'）
------------------------------------------------------------ */
uint64_t ds_len(const char *s);


/* ------------------------------------------------------------
   dynamic string capacity
   功能：获取动态字符串的缓冲区容量
   参数：动态字符串变量
   返回：缓冲区容量（不包括尾部的 '\0'）
------------------------------------------------------------ */
uint64_t ds_cap(const char *s);


/* ------------------------------------------------------------
   dynamic string last char
   功能：获取动态字符串的最后一个字符
   参数：动态字符串变量
   返回：最后一个字符，如果字符串为空，则返回 '\0'
------------------------------------------------------------ */
int ds_last(char *s);


/* ------------------------------------------------------------
   dynamic string end position
   功能：获取动态字符串最后一个字符之后的位置
   参数：动态字符串变量
   返回：位置指针
------------------------------------------------------------ */
char * ds_end(char *s);


/* ------------------------------------------------------------
   grow dynamic string
   功能：根据 needsize 判断是否需要扩容，根据需要执行扩容
   参数：动态字符串变量的地址，要申请的可用空间大小
   返回：动态字符串变量
------------------------------------------------------------ */
char * ds_grow(char **ps, size_t needsize);


/* ------------------------------------------------------------
   resize dynamic string capacity
   功能：调整动态字符串的容量（会自动在容量后面添加 '\0'）
   参数：动态字符串变量的地址，新的容量
   返回：动态字符串变量
------------------------------------------------------------ */
char * ds_resize(char **ps, size_t cap);


/* ------------------------------------------------------------
   pack dynamic string
   功能：压缩动态字符串（释放预留空间，只保留数据部分）
   参数：动态字符串变量的地址
   返回：动态字符串变量
------------------------------------------------------------ */
char * ds_pack(char **ps);


/* ------------------------------------------------------------
   dynamic string add char
   功能：向动态字符串中追加字符
   参数：动态字符串变量的地址，要写入的字符
   返回：动态字符串变量
------------------------------------------------------------ */
char * ds_add_char(char **ps, char c);


/* ------------------------------------------------------------
   dynamic string add string
   功能：向动态字符串中追加字符串
   参数：动态字符串变量的地址，要写入的字符串
   返回：动态字符串变量
------------------------------------------------------------ */
char * ds_add_str(char **ps, const char* sub);


/* ------------------------------------------------------------
   dynamic string add strings
   功能：向动态字符串中追加多个字符串
   参数：动态字符串变量的地址，要写入的字符串个数，字符串列表
   返回：动态字符串变量
------------------------------------------------------------ */
char * ds_add_strs(char **ps, int count, ...);


/* ------------------------------------------------------------
   dynamic string insert numbered string
   功能：在动态字符串的指定位置插入指定长度的子串
   参数：插入点、要插入的子串、子串长度（0 表示全部）
   返回：动态字符串变量
------------------------------------------------------------ */
char * ds_ins_str(char **ps, size_t pos, const char *sub, size_t len);

#endif
